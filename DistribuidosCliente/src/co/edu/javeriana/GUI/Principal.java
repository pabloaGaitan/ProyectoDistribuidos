/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package co.edu.javeriana.GUI;

import co.edu.javeriana.main.SistemaCliente;
import co.edu.javeriana.persistence.Persistence;
import co.edu.javeriana.thread.RecibirThread;
import java.util.ArrayList;
import java.util.List;
import javax.swing.DefaultCellEditor;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author redes
 */
public class Principal extends javax.swing.JFrame {
    
    SistemaCliente sistema = new SistemaCliente();
    JOptionPane mensajes = new JOptionPane();
    
    /**
     * Creates new form Principal
     */
    public Principal() {
        initComponents();
        this.setTitle("Cliente");
        try{
            Persistence.cargarCoordinador("coordinador.txt");
        }catch(Exception e){
            JOptionPane.showMessageDialog(null, e.toString(),"Error",JOptionPane.ERROR_MESSAGE);
        }
        BenviarConsulta.setEnabled(false);
        this.setResizable(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        cantServidores = new javax.swing.JTextField();
        bCantidadServidores = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        BenviarConsulta = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("1. Arquitectura\n2. Número de Cores\n3. Total de RAM\n4. Consumo total de CPU\n5. Memoria RAM usada\n6. Memoria RAM disponible\n7. Sistema de archivos ");
        jScrollPane1.setViewportView(jTextArea1);

        jLabel1.setText("Cantidad de Servidores:");

        cantServidores.setEditable(false);

        bCantidadServidores.setText("Cantidad de servidores");
        bCantidadServidores.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bCantidadServidoresActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(jTable1);

        BenviarConsulta.setText("Enviar Consulta");
        BenviarConsulta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BenviarConsultaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(cantServidores, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(bCantidadServidores)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(BenviarConsulta)
                        .addGap(17, 17, 17)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(15, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(cantServidores, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(bCantidadServidores)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BenviarConsulta)))
                .addGap(46, 46, 46)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bCantidadServidoresActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bCantidadServidoresActionPerformed
        cantServidores.setText(sistema.cantServers());
        llenarTable(Integer.parseInt(cantServidores.getText()));
        BenviarConsulta.setEnabled(true);
    }//GEN-LAST:event_bCantidadServidoresActionPerformed

    private void BenviarConsultaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BenviarConsultaActionPerformed
        List<Integer> servs = new ArrayList<>();
        boolean continuar = true;
        List<String> opc = new ArrayList<>();
        List<String> intervalos = new ArrayList<>();
        List<String> tiempos = new ArrayList<>();
        List<Boolean> periodicos = new ArrayList<>();
        for(int i = 0;i<jTable1.getRowCount();i++){
            if(!jTable1.getModel().getValueAt(i,1).equals("")){
                //System.out.println(jTable1.getModel().getValueAt(i,0).toString() + " "+jTable1.getModel().getValueAt(i,1).toString()+" "+ jTable1.getModel().getValueAt(i,4)+" " +(String)jTable1.getModel().getValueAt(i,3));
                servs.add(Integer.parseInt(jTable1.getModel().getValueAt(i,0).toString()));
                opc.add(jTable1.getModel().getValueAt(i,1).toString());
                if(((String)jTable1.getModel().getValueAt(i,2)).equals("Periodico")){
                    if(!jTable1.getModel().getValueAt(i,4).equals("") && !jTable1.getModel().getValueAt(i,3).equals("")){
                        intervalos.add((String)jTable1.getModel().getValueAt(i,4));
                        tiempos.add((String)jTable1.getModel().getValueAt(i,3));
                        periodicos.add(true);
                    }else{
                        JOptionPane.showMessageDialog(null,"Debe haber tiempo de intervalo y tiempo total para los mensajes periodicos", "WARNING",JOptionPane.WARNING_MESSAGE);
                        continuar = false;
                    }
                }else{
                    periodicos.add(false);
                    intervalos.add("1000");
                    tiempos.add("");
                }
            }
        
        }
        if(opc.size()==0)
            JOptionPane.showMessageDialog(null,"¿Seguro no quiere consultar nada?", "WARNING",JOptionPane.WARNING_MESSAGE);
        if(continuar && opc.size()>0){
            InfoMensajes inf = new InfoMensajes();
            inf.setMain(this);
            this.setVisible(false);
            inf.setVisible(true);
            sistema.setInfoMensaje(inf);
            inf.getAcep().setEnabled(false);
            new RecibirThread(sistema,servs, opc, tiempos, intervalos, periodicos).start();
        }
    }//GEN-LAST:event_BenviarConsultaActionPerformed
    
    /**
     * Se encarga de llenar la tabla con el formato dado.
     */
    public void llenarTable(int serv){
        DefaultTableModel model = new DefaultTableModel(){
            public Class getColumnClass(int indice){
                Object ob = getValueAt(0,indice);
                if(ob == null)
                    return Object.class;
                return ob.getClass();
            }
        };
        String[] items = new String[2];
        items[0] = "Periodico";
        items[1] = "No periodico";
        JComboBox jcb = new JComboBox(items);
        model.addColumn("Id Servidor");
        model.addColumn("Operaciones");
        model.addColumn("Tipo");
        model.addColumn("Tiempo total");
        model.addColumn("Intervalo");
        for(int i = 0; i< serv; i++){
            model.addRow(new Object[]{i+1,"",items[1],"",""});
        }
        jTable1.setModel(model);
        jTable1.setRowHeight(30);
        jScrollPane2.setViewportView(jTable1);
        TableColumn tc = jTable1.getColumnModel().getColumn(2);
        TableCellEditor tce = new DefaultCellEditor(jcb);
        tc.setCellEditor(tce);
        repaint();
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BenviarConsulta;
    private javax.swing.JButton bCantidadServidores;
    private javax.swing.JTextField cantServidores;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
